services:
    server:
        image: source-laravel:1.0
        container_name: source-server
        build:
            context: ./server
            dockerfile: Dockerfile
        ports:
            - '8000:80'
        volumes:
            - ./server:/var/www/html
        depends_on:
            db:
                condition: service_healthy
        environment:
            QUEUE_CONNECTION: database
            CACHE_STORE: database
            SESSION_DRIVER: database
            BCRYPT_ROUNDS: 12
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost/up']
            interval: 1m30s
            timeout: 10s
            start_period: 5s
            retries: 3

    n8n:
        image: n8nio/n8n:1.107.2
        container_name: source-n8n
        restart: always
        env_file:
            - .env
        ports:
            - '5678:5678'
        volumes:
            - n8n_data:/home/node/.n8n
        environment:
            N8N_BASIC_AUTH_ACTIVE: true
            N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
            N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}
            N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
            N8N_HOST: ${N8N_HOST}
            N8N_PORT: ${N8N_PORT}
            N8N_PROTOCOL: ${N8N_PROTOCOL}
            NODE_ENV: ${NODE_ENV}
            TZ: UTC
            N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: true
            N8N_RUNNERS_ENABLED: true
            DB_SQLITE_POOL_SIZE: 2
        healthcheck:
            test:
                [
                    'CMD',
                    'wget',
                    '--spider',
                    '-q',
                    'http://localhost:5678/healthz/readiness',
                ]
            interval: 1m30s
            timeout: 10s
            start_period: 10s
            retries: 3

    db:
        image: postgres:17.6
        container_name: source-postgres
        restart: always
        ports:
            - '5432:5432'
        volumes:
            - db_data:/var/lib/postgresql/data
        env_file:
            - .env
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U postgres']
            interval: 1m30s
            timeout: 5s
            start_period: 3s
            retries: 3

volumes:
    db_data:
    n8n_data:
