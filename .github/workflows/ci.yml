name: CI - Build Containers

on:
    push:
        branches: ['main', 'dev']
    pull_request:
        branches: ['main', 'dev']

concurrency:
    group: ci-${{ github.ref }}
    cancel-in-progress: true

jobs:
    validate-compose:
        name: Validate docker-compose configuration
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Ensure .env for docker-compose
              run: |
                  if [ -f .env ]; then
                    echo ".env already exists"
                  elif [ -f .env.example ]; then
                    cp .env.example .env
                  else
                    touch .env
                  fi

            - name: Validate docker-compose.yaml
              run: docker compose -f docker-compose.yaml config -q

    build-images:
        name: Build Docker images (no push)
        needs: validate-compose
        runs-on: ubuntu-latest
        strategy:
            # Realistically, in production, `fail-fast` should be true,
            # but we want to see every issue during these early stages of implementing
            fail-fast: false
            matrix:
                include:
                    - name: server
                      context: server
                      dockerfile: server/Dockerfile
                    - name: client
                      context: client
                      dockerfile: client/Dockerfile
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build ${{ matrix.name }} image
              uses: docker/build-push-action@v6
              with:
                  context: ${{ matrix.context }}
                  file: ${{ matrix.dockerfile }}
                  platforms: linux/amd64
                  push: false
                  tags: ghcr.io/${{ github.repository }}:${{ matrix.name }}-ci
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
