<?php
/**
 * VariableScope
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.33.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.15.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * VariableScope Class Doc Comment
 *
 * @category Class
 * @description Scopes allow a variable to be shown or hidden in the variable picker for various fields. This declutters the Figma UI if you have a large number of variables. Variable scopes are currently supported on &#x60;FLOAT&#x60;, &#x60;STRING&#x60;, and &#x60;COLOR&#x60; variables.  &#x60;ALL_SCOPES&#x60; is a special scope that means that the variable will be shown in the variable picker for all variable fields. If &#x60;ALL_SCOPES&#x60; is set, no additional scopes can be set.  &#x60;ALL_FILLS&#x60; is a special scope that means that the variable will be shown in the variable picker for all fill fields. If &#x60;ALL_FILLS&#x60; is set, no additional fill scopes can be set.  Valid scopes for &#x60;FLOAT&#x60; variables: - &#x60;ALL_SCOPES&#x60; - &#x60;TEXT_CONTENT&#x60; - &#x60;WIDTH_HEIGHT&#x60; - &#x60;GAP&#x60; - &#x60;STROKE_FLOAT&#x60; - &#x60;EFFECT_FLOAT&#x60; - &#x60;OPACITY&#x60; - &#x60;FONT_WEIGHT&#x60; - &#x60;FONT_SIZE&#x60; - &#x60;LINE_HEIGHT&#x60; - &#x60;LETTER_SPACING&#x60; - &#x60;PARAGRAPH_SPACING&#x60; - &#x60;PARAGRAPH_INDENT&#x60;  Valid scopes for &#x60;STRING&#x60; variables: - &#x60;ALL_SCOPES&#x60; - &#x60;TEXT_CONTENT&#x60; - &#x60;FONT_FAMILY&#x60; - &#x60;FONT_STYLE&#x60;  Valid scopes for &#x60;COLOR&#x60; variables: - &#x60;ALL_SCOPES&#x60; - &#x60;ALL_FILLS&#x60; - &#x60;FRAME_FILL&#x60; - &#x60;SHAPE_FILL&#x60; - &#x60;TEXT_FILL&#x60; - &#x60;STROKE_COLOR&#x60; - &#x60;EFFECT_COLOR&#x60;
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class VariableScope
{
    /**
     * Possible values of this enum
     */
    public const ALL_SCOPES = 'ALL_SCOPES';

    public const TEXT_CONTENT = 'TEXT_CONTENT';

    public const CORNER_RADIUS = 'CORNER_RADIUS';

    public const WIDTH_HEIGHT = 'WIDTH_HEIGHT';

    public const GAP = 'GAP';

    public const ALL_FILLS = 'ALL_FILLS';

    public const FRAME_FILL = 'FRAME_FILL';

    public const SHAPE_FILL = 'SHAPE_FILL';

    public const TEXT_FILL = 'TEXT_FILL';

    public const STROKE_COLOR = 'STROKE_COLOR';

    public const STROKE_FLOAT = 'STROKE_FLOAT';

    public const EFFECT_FLOAT = 'EFFECT_FLOAT';

    public const EFFECT_COLOR = 'EFFECT_COLOR';

    public const OPACITY = 'OPACITY';

    public const FONT_FAMILY = 'FONT_FAMILY';

    public const FONT_STYLE = 'FONT_STYLE';

    public const FONT_WEIGHT = 'FONT_WEIGHT';

    public const FONT_SIZE = 'FONT_SIZE';

    public const LINE_HEIGHT = 'LINE_HEIGHT';

    public const LETTER_SPACING = 'LETTER_SPACING';

    public const PARAGRAPH_SPACING = 'PARAGRAPH_SPACING';

    public const PARAGRAPH_INDENT = 'PARAGRAPH_INDENT';

    public const FONT_VARIATIONS = 'FONT_VARIATIONS';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::ALL_SCOPES,
            self::TEXT_CONTENT,
            self::CORNER_RADIUS,
            self::WIDTH_HEIGHT,
            self::GAP,
            self::ALL_FILLS,
            self::FRAME_FILL,
            self::SHAPE_FILL,
            self::TEXT_FILL,
            self::STROKE_COLOR,
            self::STROKE_FLOAT,
            self::EFFECT_FLOAT,
            self::EFFECT_COLOR,
            self::OPACITY,
            self::FONT_FAMILY,
            self::FONT_STYLE,
            self::FONT_WEIGHT,
            self::FONT_SIZE,
            self::LINE_HEIGHT,
            self::LETTER_SPACING,
            self::PARAGRAPH_SPACING,
            self::PARAGRAPH_INDENT,
            self::FONT_VARIATIONS
        ];
    }
}


