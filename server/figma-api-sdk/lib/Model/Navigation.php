<?php
/**
 * Navigation
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.33.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.15.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * Navigation Class Doc Comment
 *
 * @category Class
 * @description The method of navigation. The possible values are: - &#x60;\&quot;NAVIGATE\&quot;&#x60;: Replaces the current screen with the destination, also closing all overlays. - &#x60;\&quot;OVERLAY\&quot;&#x60;: Opens the destination as an overlay on the current screen. - &#x60;\&quot;SWAP\&quot;&#x60;: On an overlay, replaces the current (topmost) overlay with the destination. On a top-level frame,    behaves the same as &#x60;\&quot;NAVIGATE\&quot;&#x60; except that no entry is added to the navigation history. - &#x60;\&quot;SCROLL_TO\&quot;&#x60;: Scrolls to the destination on the current screen. - &#x60;\&quot;CHANGE_TO\&quot;&#x60;: Changes the closest ancestor instance of source node to the specified variant.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class Navigation
{
    /**
     * Possible values of this enum
     */
    public const NAVIGATE = 'NAVIGATE';

    public const SWAP = 'SWAP';

    public const OVERLAY = 'OVERLAY';

    public const SCROLL_TO = 'SCROLL_TO';

    public const CHANGE_TO = 'CHANGE_TO';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::NAVIGATE,
            self::SWAP,
            self::OVERLAY,
            self::SCROLL_TO,
            self::CHANGE_TO
        ];
    }
}


